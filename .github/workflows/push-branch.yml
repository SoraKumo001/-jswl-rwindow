name: Push branch
on:
  push:
jobs:
  ESLint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules(yarn.lock)
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}
      - name: Package install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Lint
        run: yarn lint
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules(yarn.lock)
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}
      - name: Package install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Build
        run: yarn build
  Jest:
    name: Jest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules(yarn.lock)
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}
      - name: Package install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Pull Mastar Shapshot
        if: ${{github.ref != 'refs/heads/master'}}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          WORK_DIR: temp
          TARGET_PATH: captures
          SRC_PATH: __screenshots__
        run: |
          BRANCH=master
          mkdir -p ${WORK_DIR}/${TARGET_PATH}/${BRANCH}
          cd ${WORK_DIR}
          git init
          git config --global user.name $GITHUB_ACTOR
          git config --global user.email ${GITHUB_ACTOR}@git
          git config core.sparsecheckout true
          git remote add origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
          echo /${TARGET_PATH}/${BRANCH} > .git/info/sparse-checkout    
          git pull origin gh-pages || true
          git checkout -b gh-pages   
          mv -f ${TARGET_PATH}/${BRANCH}/${SRC_PATH} ../${SRC_PATH} || true
      - name: Storybook
        run: yarn storybook:build
      - name: Screenshot
        if: ${{github.ref != 'refs/heads/master'}}
        run: |
          yarn sc:screenshot
          yarn reg-cli __screenshots__ screenshots __image_diff__ -J __image_diff__/index.json
      - name: Git init
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          TARGET_PATH: captures
        run: |
          BRANCH=`echo $GITHUB_REF | sed 's/^refs\/heads\///' | sed -e 's/\//-/g'`
          mkdir __gh-pages__
          cd __gh-pages__
          git init
          git config --global user.name $GITHUB_ACTOR
          git config --global user.email ${GITHUB_ACTOR}@git
          git config core.sparsecheckout true
          git remote add origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
          echo /${TARGET_PATH}/${BRANCH} > .git/info/sparse-checkout
          git pull origin gh-pages || true
          git checkout -b gh-pages
      - name: Create gh-pages
        env:
          TARGET_PATH: captures
          SRC_PATH1: storybook-static
          SRC_PATH2: __screenshots__
          SRC_PATH3: __image_diff__
        working-directory: ./__gh-pages__
        run: |
          BRANCH=`echo $GITHUB_REF | sed 's/^refs\/heads\///' | sed -e 's/\//-/g'`
          rm -rf ${TARGET_PATH}/${BRANCH} || true
          mkdir -p ${TARGET_PATH}/${BRANCH}
          mv ../${SRC_PATH1} ${TARGET_PATH}/${BRANCH}/stories
          mv ../${SRC_PATH2} ${TARGET_PATH}/${BRANCH}/`echo ${SRC_PATH2} | sed -r "s/__(.*)__/\1/"` || true
          mv -../${SRC_PATH3} ${TARGET_PATH}/${BRANCH}/`echo ${SRC_PATH3} | sed -r "s/__(.*)__/\1/"` || true
          git ls-files | sed -r "s/^${TARGET_PATH}\/([^\/]+)\/.*/\1/;t;d" | echo -e "`cat`\n${BRANCH}" | sort -u > ${TARGET_PATH}/index.txt
      - name: Save gh-pages
        working-directory: ./__gh-pages__
        run: |
          BRANCH=`echo $GITHUB_REF | sed 's/^refs\/heads\///'`
          git add .
          git commit -m "Create Snapshot($BRANCH)" || true
          for i in `seq 5` ; do
            (git push origin gh-pages && break) || sleep 5
          done

